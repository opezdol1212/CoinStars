
import os
import json
import random
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
keyboard.add(KeyboardButton("üåï –û—Ä—ë–ª –∏–ª–∏ —Ä–µ—à–∫–∞"))
keyboard.add(KeyboardButton("üí∞ –ë–∞–ª–∞–Ω—Å"))
keyboard.add(KeyboardButton("üì§ –í—ã–≤–æ–¥ –∑–≤—ë–∑–¥"))

BALANCE_FILE = "balance.json"

def load_balances():
    if not os.path.exists(BALANCE_FILE):
        return {}
    with open(BALANCE_FILE, "r") as f:
        return json.load(f)

def save_balances(balances):
    with open(BALANCE_FILE, "w") as f:
        json.dump(balances, f)

def get_balance(user_id):
    balances = load_balances()
    return balances.get(str(user_id), 0)

def change_balance(user_id, amount):
    balances = load_balances()
    uid = str(user_id)
    balances[uid] = balances.get(uid, 0) + amount
    save_balances(balances)

@dp.message_handler(commands=["start"])
async def start(msg: types.Message):
    await msg.answer("–ü—Ä–∏–≤–µ—Ç! –ë—Ä–æ—Å–∞–π –º–æ–Ω–µ—Ç—É üéØ", reply_markup=keyboard)

@dp.message_handler(lambda m: m.text == "üåï –û—Ä—ë–ª –∏–ª–∏ —Ä–µ—à–∫–∞")
async def coin_flip(msg: types.Message):
    user_id = msg.from_user.id
    balance = get_balance(user_id)
    if balance < 1:
        await msg.answer("–£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤—ë–∑–¥. –ù—É–∂–Ω–æ —Ö–æ—Ç—è –±—ã 1 ‚≠ê.")
        return

    # –ú–∏–Ω—É—Å 1 –∑–≤–µ–∑–¥–∞ –∑–∞ –ø–æ–ø—ã—Ç–∫—É
    change_balance(user_id, -1)

    # 65% —à–∞–Ω—Å –ø–æ–±–µ–¥—ã –±–æ—Ç–∞
    bot_wins = random.random() < 0.65

    if bot_wins:
        result = "üòà –ë–æ—Ç –ø–æ–±–µ–¥–∏–ª!"
    else:
        change_balance(user_id, 2)
        result = "üéâ –¢—ã –ø–æ–±–µ–¥–∏–ª! –ü–æ–ª—É—á–∞–µ—à—å 2 ‚≠ê!"

    await msg.answer(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")

@dp.message_handler(lambda m: m.text == "üí∞ –ë–∞–ª–∞–Ω—Å")
async def show_balance(msg: types.Message):
    balance = get_balance(msg.from_user.id)
    await msg.answer(f"–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ‚≠ê {balance}")

@dp.message_handler(lambda m: m.text == "üì§ –í—ã–≤–æ–¥ –∑–≤—ë–∑–¥")
async def withdraw_request(msg: types.Message):
    user_id = msg.from_user.id
    balance = get_balance(user_id)
    await bot.send_message(ADMIN_ID, f"üîî –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ –æ—Ç @{msg.from_user.username or user_id} (ID: {user_id})
–ë–∞–ª–∞–Ω—Å: ‚≠ê {balance}")
    await msg.answer("–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω—É. –û–∂–∏–¥–∞–π –æ—Ç–≤–µ—Ç–∞.")

